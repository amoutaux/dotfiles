From e83cd4f02a3eaf4926054bdea8aeb7c9f1462cab Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Aure=CC=81lien=20Moutaux?= <aurelien.moutaux@gadz.org>
Date: Sun, 28 Mar 2021 19:13:28 +0200
Subject: [PATCH] custom vi mode

---
 plugins/vi-mode/vi-mode.plugin.zsh | 59 +++++++-----------------------
 1 file changed, 14 insertions(+), 45 deletions(-)

diff --git a/plugins/vi-mode/vi-mode.plugin.zsh b/plugins/vi-mode/vi-mode.plugin.zsh
index dd4afdd8..71e1dfe7 100644
--- a/plugins/vi-mode/vi-mode.plugin.zsh
+++ b/plugins/vi-mode/vi-mode.plugin.zsh
@@ -6,22 +6,20 @@
 # Set to "true" to force the prompt to reset on each mode change.
 # Unset or set to any other value to do the opposite.
 #
-# The default is not to reset, unless we're showing the mode in RPS1.
-typeset -g VI_MODE_RESET_PROMPT_ON_MODE_CHANGE
 # Control whether to change the cursor style on mode change.
 #
 # Set to "true" to change the cursor on each mode change.
 # Unset or set to any other value to do the opposite.
 typeset -g VI_MODE_SET_CURSOR
 
-typeset -g VI_KEYMAP=main
+typeset -g VI_KEYMAP=vicmd
 
 function _vi-mode-set-cursor-shape-for-keymap() {
   [[ "$VI_MODE_SET_CURSOR" = true ]] || return
 
   # https://vt100.net/docs/vt510-rm/DECSCUSR
   local _shape=0
-  case "${1:-${VI_KEYMAP:-main}}" in
+  case "${1:-${VI_KEYMAP:-vicmd}}" in
     main)    _shape=6 ;; # vi insert: line
     viins)   _shape=6 ;; # vi insert: line
     isearch) _shape=6 ;; # inc search: line
@@ -38,29 +36,23 @@ function _vi-mode-set-cursor-shape-for-keymap() {
 function zle-keymap-select() {
   # update keymap variable for the prompt
   typeset -g VI_KEYMAP=$KEYMAP
-
-  if [[ "${VI_MODE_RESET_PROMPT_ON_MODE_CHANGE:-}" = true ]]; then
-    zle reset-prompt
-    zle -R
-  fi
+  zle reset-prompt
+  zle -R
   _vi-mode-set-cursor-shape-for-keymap "${VI_KEYMAP}"
 }
 zle -N zle-keymap-select
 
-# These "echoti" statements were originally set in lib/key-bindings.zsh
-# Not sure the best way to extend without overriding.
+# Start in vicmd mode
 function zle-line-init() {
-  local prev_vi_keymap
-  prev_vi_keymap="${VI_KEYMAP:-}"
-  typeset -g VI_KEYMAP=main
-  [[ "$prev_vi_keymap" != 'main' ]] && [[ "${VI_MODE_RESET_PROMPT_ON_MODE_CHANGE:-}" = true ]] && zle reset-prompt
-  (( ! ${+terminfo[smkx]} )) || echoti smkx
+  zle -K vicmd;
+  typeset -g VI_KEYMAP=vicmd
+  zle reset-prompt
   _vi-mode-set-cursor-shape-for-keymap "${VI_KEYMAP}"
 }
 zle -N zle-line-init
 
 function zle-line-finish() {
-  typeset -g VI_KEYMAP=main
+  typeset -g VI_KEYMAP=vicmd
   (( ! ${+terminfo[rmkx]} )) || echoti rmkx
   _vi-mode-set-cursor-shape-for-keymap default
 }
@@ -68,28 +60,10 @@ zle -N zle-line-finish
 
 bindkey -v
 
-# allow vv to edit the command line (standard behaviour)
-autoload -Uz edit-command-line
-zle -N edit-command-line
-bindkey -M vicmd 'vv' edit-command-line
-
-# allow ctrl-p, ctrl-n for navigate history (standard behaviour)
-bindkey '^P' up-history
-bindkey '^N' down-history
-
-# allow ctrl-h, ctrl-w, ctrl-? for char and word deletion (standard behaviour)
-bindkey '^?' backward-delete-char
-bindkey '^h' backward-delete-char
-bindkey '^w' backward-kill-word
-
 # allow ctrl-r and ctrl-s to search the history
 bindkey '^r' history-incremental-search-backward
 bindkey '^s' history-incremental-search-forward
 
-# allow ctrl-a and ctrl-e to move to beginning/end of line
-bindkey '^a' beginning-of-line
-bindkey '^e' end-of-line
-
 function wrap_clipboard_widgets() {
   # NB: Assume we are the first wrapper and that we only wrap native widgets
   # See zsh-autosuggestions.zsh for a more generic and more robust wrapper
@@ -123,20 +97,15 @@ wrap_clipboard_widgets copy vi-yank vi-yank-eol vi-backward-kill-word vi-change-
 wrap_clipboard_widgets paste vi-put-{before,after}
 unfunction wrap_clipboard_widgets
 
-# if mode indicator wasn't setup by theme, define default
-if [[ -z "$MODE_INDICATOR" ]]; then
-  MODE_INDICATOR='%B%F{red}<%b<<%f'
-fi
-
 function vi_mode_prompt_info() {
-  # If we're using the prompt to display mode info, and we haven't explicitly
-  # disabled "reset prompt on mode change", then set it here.
-  #
   # We do that here instead of the `if` statement below because the user may
   # set RPS1/RPROMPT to something else in their custom config.
-  : "${VI_MODE_RESET_PROMPT_ON_MODE_CHANGE:=true}"
 
-  echo "${${VI_KEYMAP/vicmd/$MODE_INDICATOR}/(main|viins)/}"
+  case "${VI_KEYMAP}" in
+    main|viins) echo "%F{yellow}INSERT%f" ;; # vi insert: line
+    vicmd)   echo "%F{blue}COMMAND%f" ;; # vi cmd: block
+    *) echo "%F{red}MISSINGÂ MODE SETUP%f" ;;
+  esac
 }
 
 # define right prompt, if it wasn't defined by a theme
-- 
2.25.1

